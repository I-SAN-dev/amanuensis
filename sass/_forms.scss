//
// Forms
// --------------------------------------------------


// Common form controls
//
// Shared size and type resets for form controls. Apply `.form-control` to any
// of the following form controls:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]

.form-control {
  height: 2.5*$font-size-base - ($font-size-base/3); // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: (1.5*$font-size-base/2) 0 (1.5*$font-size-base/4);
  margin-bottom: (1.5*$font-size-base/4);
  color: $input-color;
  border: 0;
  border-bottom: 1px solid $input-border;
  @include box-shadow(inset 0 0 0 transparent);
  @include transition(border-bottom-width ease-in-out .25s);

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus;

  &:focus {
    border-bottom-width: 2px;
    @include box-shadow(inset 0 0 0 transparent);
  }


  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    color: $input-color-placeholder;
    border-style: dotted;
  }

  // [converter] extracted textarea& to textarea.form-control
}

.ipe
{
  cursor: pointer;

  .ipe-empty
  {
    color: $gray-lighter;
    transition: 0.3s color;


    &:hover
    {
      color: $text-color;
    }
  }
}

/*
 * Material Design Inputs: https://scotch.io/tutorials/google-material-design-input-boxes-in-css3
 */
.group {
  position: relative;
  /*margin-bottom: 45px;*/

  input {
    font-size: 18px;
    padding: 10px 10px 10px 5px;
    display: block;
    width: 100%;
    border: none;
    border-bottom: 1px solid $gray-light;
    background-color: transparent;
  }
  input:focus {
    outline: none;
  }

  /* LABEL ======================================= */
  label {
    visibility: hidden;
  }


  /* BOTTOM BARS ================================= */
  .bar {
    position: relative;
    display: block;
    width: 100%;
  }
  .bar:before, .bar:after {
    content: '';
    height: 2px;
    width: 0;
    bottom: 1px;
    position: absolute;
    background: $brand-primary;
    transition: 0.2s ease all;
    -moz-transition: 0.2s ease all;
    -webkit-transition: 0.2s ease all;
  }
  .bar:before {
    left: 50%;
  }
  .bar:after {
    right: 50%;
  }

  /* active state */
  input:focus ~ .bar:before, input:focus ~ .bar:after {
    width: 50%;
  }

  /* HIGHLIGHTER ================================== */
  .highlight {
    position: absolute;
    height: 60%;
    width: 100px;
    top: 25%;
    left: 0;
    pointer-events: none;
    opacity: 0.5;
  }

  /* active state */
  input:focus ~ .highlight {
    -webkit-animation: inputHighlighter 0.3s ease;
    -moz-animation: inputHighlighter 0.3s ease;
    animation: inputHighlighter 0.3s ease;
  }

  /* ANIMATIONS ================ */
  @-webkit-keyframes inputHighlighter {
    from {
      background: $brand-primary;
    }
    to {
      width: 0;
      background: transparent;
    }
  }
  @-moz-keyframes inputHighlighter {
    from {
      background: $brand-primary;
    }
    to {
      width: 0;
      background: transparent;
    }
  }
  @keyframes inputHighlighter {
    from {
      background: $brand-primary;
    }
    to {
      width: 0;
      background: transparent;
    }
  }

}