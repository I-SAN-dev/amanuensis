Ext.data.JsonP.ama_filters_amaDate({"tagname":"class","name":"ama.filters.amaDate","autodetected":{},"files":[{"filename":"amaDate.js","href":"amaDate.html#ama-filters-amaDate"}],"members":[],"alternateClassNames":[],"aliases":{},"id":"class-ama.filters.amaDate","short_doc":"The amaDate filter\n\nConverts a given datetime string to a desired format. ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/amaDate.html#ama-filters-amaDate' target='_blank'>amaDate.js</a></div></pre><div class='doc-contents'><h1>The amaDate filter</h1>\n\n<p>Converts a given datetime string to a desired format.\nInternally uses the standard AngularJS date filter but also supports the MySQL date format.</p>\n\n<h2>Usage</h2>\n\n<p>HTML:</p>\n\n<pre><code>{{dateString|amaDate:'dd.MM.yyyy HH:mm'}}\n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre><code>$filter('amaDate')(dateString, 'dd.MM.yyyy HH:mm')\n</code></pre>\n\n<p>'dd.MM.yyyy' from the example above can be replaced by any desired datetime format</p>\n</div><div class='members'></div></div>","meta":{}});